plugins {
    id 'idea'
    id 'java'
    id 'jacoco'
    id 'findbugs'
    id 'maven'
    id 'maven-publish'
}

group = "robustools"
version = "0.0.1"

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile "pl.pragmatists:JUnitParams:1.0.5"
    testCompile "org.mockito:mockito-core:2.13.0"
}

task testsJar(type: Jar, dependsOn: classes) {
    classifier = 'tests'
    from sourceSets.test.output
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options {
        locale = "en_US"
        encoding = "UTF-8"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

findbugs {
    toolVersion = "3.0.1"
    effort = "max"
    reportLevel = "high"
    ignoreFailures = false
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn('jacocoTestReport')

task deps(type: DependencyReportTask) {
}

task classpath(type: Copy, dependsOn: ['jar']) {
    File dest = file("${rootProject.projectDir}/classpath")
    doFirst { dest.deleteDir() }
    from configurations.runtime + files("${project.libsDir}/${project.name}-${project.version}.jar")
    into dest
}

publishing {
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }

    // Configure username and token as following at ~/.gradle/gradle.properties:
    //github_package_user=GITHUB_USER_NAME
    //github_package_token=GITHUB_PERSONAL_ACCESS_TOKEN
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${project.findProperty("github_package_user")}/robustools")
            credentials {
                username = project.findProperty("github_package_user")
                password = project.findProperty("github_package_token")
            }
        }
    }
}

